// server.js โ ุงููุณุฎุฉ ุงูููุงุฆูุฉ ูุงููุถูููุฉ ๐

// 1๏ธโฃ ุงูููุชุจุงุช ุงูุฃุณุงุณูุฉ
const express = require('express');
const dotenv = require('dotenv');
const cors = require('cors');
const session = require('express-session');
const passport = require('passport');
const path = require('path');
const helmet = require('helmet');
const rateLimit = require('express-rate-limit');
const reportRoutes = require('./routes/reportRoutes');

// 2๏ธโฃ ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
dotenv.config();

// 3๏ธโฃ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ูุชููุฆุฉ Passport
const connectDB = require('./config/db.js');
require('./config/passport-setup.js');
connectDB();

// 4๏ธโฃ ุฅูุดุงุก ุชุทุจูู Express
const app = express();
app.enable('trust proxy');

// --- Middleware (ุงูุชุฑุชูุจ ููู) ---

// 1. ุชูุนูู CORS ููุณูุงุญ ุจุงูุทูุจุงุช ูู ุงููุงุฌูุฉ ุงูุฃูุงููุฉ
app.use(cors({
  origin: [process.env.CLIENT_URL, 'http://127.0.0.1:5500', 'http://localhost:5500'],
  methods: 'GET,POST,PUT,DELETE',
  credentials: true,
}));

// 2. ุชูุนูู Helmet ูุน ุงูุฅุนุฏุงุฏ ุงูุตุญูุญ ููุณูุงุญ ุจุนุฑุถ ุงูููุงุฑุฏ ุนุจุฑ ุงููุทุงูุงุช
app.use(helmet({
    contentSecurityPolicy: {
        directives: {
            defaultSrc: ["'self'"],
            scriptSrc: ["'self'", "'unsafe-inline'", "https://cdnjs.cloudflare.com", "https://upload.wikimedia.org"],
            connectSrc: ["'self'", "http://localhost:5000", "https://accounts.google.com"],
            imgSrc: ["'self'", "data:", "https://upload.wikimedia.org", "https://lh3.googleusercontent.com"],
            frameSrc: ["'self'", "https://accounts.google.com"],
        },
    },
    crossOriginResourcePolicy: { policy: "cross-origin" }
}));


// 3. ุชูููู JSON body parser
app.use(express.json());
app.use('/api/reports', reportRoutes);

// 4. ุฅุนุฏุงุฏ ุงูุฌูุณุงุช
app.use(session({
  secret: process.env.SESSION_SECRET || 'CHANGE_ME',
  resave: false,
  saveUninitialized: false,
}));
app.use(passport.initialize());
app.use(passport.session());


// โ --- ุจุฏุงูุฉ ุงูุฌุฒุก ุงูุฐู ุชู ุฅุนุงุฏุชู ูุชุตุญูุญู ---
// 5. ุงุณุชุฎุฏุงู ุงูุทุฑููุฉ ุงูุตุญูุญุฉ ูุงููุณุชูุฑุฉ ูุนุฑุถ ุงููุฌูุฏุงุช ุงูุนุงูุฉ
app.use(express.static(path.join(__dirname, 'public')));
app.use('/Summaries', express.static(path.join(__dirname, 'Summaries')));

// ุงูููุฏ ุงููุฎุตุต ูุนุฑุถ ูููุงุช PDF ูู ูุฌูุฏ Lessons ูุน ุฅุตูุงุญ ูุดููุฉ ุงูููุงุฑ ุงูุฎุงุฏู
app.use('/lessons', (req, res) => {
  // ูู ุชุดููุฑ ุงูุฑุงุจุท ุงููุงุฏู ูู ุงููุชุตูุญ (ูุตูุญ ูุดููุฉ ุงูุฃุญุฑู ุงูุฎุงุตุฉ ูุงููุณุงูุงุช)
  const decodedPath = decodeURIComponent(req.path);
  const filePath = path.join(__dirname, 'Lessons', decodedPath);

  // ุฅุฑุณุงู ุงูููู. Express ุณูุชุนุงูู ูุน ุงูู headers ุชููุงุฆููุง
  // res.sendFile ููู ุจูุง ููู ุงูููุงูุฉ ูุฅุฑุณุงู ุงููููุงุช ุจุดูู ุตุญูุญ
  res.sendFile(filePath, (err) => {
    if (err) {
      // ุฅุฐุง ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููููุ ุฃุฑุณู ุฎุทุฃ 404 ุจุฃูุงู
      console.error(`โ PDF not found at path: ${filePath}`);
      if (!res.headersSent) { // ูุชุฃูุฏ ูู ุฃููุง ูู ูุฑุณู ุฃู ุงุณุชุฌุงุจุฉ ุจุนุฏ
        res.status(404).send('PDF not found.');
      }
    }
  });
});
// โ --- ููุงูุฉ ุงูุฌุฒุก ุงูุฐู ุชู ุฅุนุงุฏุชู ูุชุตุญูุญู ---


// 6. ุชุญุฏูุฏ ูุนุฏู ุงูุทูุจุงุช
const apiLimiter = rateLimit({
  windowMs: 60 * 1000,
  max: 100,
});
app.use('/api/', apiLimiter);

// --- ุจุฏุงูุฉ ุงูุฅุถุงูุฉ ---
const authController = require('./controllers/authController'); // <-- โ ุชู ุงุณุชูุฑุงุฏ ุงูู controller

// --- โ ุฅุถุงูุฉ ุฌุฏูุฏุฉ ูุชุตุญูุญ: ูุณุงุฑุงุช ุงููุตุงุฏูุฉ ุงูุฎุงุตุฉ ุจุงููุดุฑู ---
// ูุฐุง ุงููุณุงุฑ ูุจุฏุฃ ุนูููุฉ ุชุณุฌูู ุฏุฎูู ุงููุดุฑู
app.get('/auth/google/admin', passport.authenticate('google', {
    scope: ['profile', 'email'],
    callbackURL: '/auth/google/callback/admin' // <-- โ ุชู ุฅุถุงูุฉ ุงูุณุทุฑ ุงููุทููุจ
}));

// ูุฐุง ุงููุณุงุฑ ูุณุชูุจู ุงููุดุฑู ุจุนุฏ ุนูุฏุชู ูู ุฌูุฌู
app.get('/auth/google/callback/admin',
    passport.authenticate('google', {
        failureRedirect: process.env.CLIENT_URL + '/admin-panel/login.html?error=failed',
        callbackURL: '/auth/google/callback/admin' // <-- โ ูุชู ุฅุถุงูุฉ ุงูุณุทุฑ ุงููุทููุจ ููุง ุฃูุถูุง
    }),
    authController.googleAdminCallback
);
// --- ููุงูุฉ ุงูุฅุถุงูุฉ ูุงูุชุตุญูุญ ---


// 7. ุงููุณุงุฑุงุช (Routes)
app.get('/', (req, res) => res.send('Dental Quest API is running!'));

const authRoutes = require('./routes/authRoutes.js');
const userRoutes = require('./routes/userRoutes.js');
const contentRoutes = require('./routes/contentRoutes.js');
const aiRoutes = require('./routes/aiRoutes.js');
const translateRoutes = require('./routes/translateRoutes.js');
const summaryRoutes = require('./routes/summaryRoutes.js');
const geminiRoutes = require('./routes/geminiRoutes.js');
const quizResultRoutes = require('./routes/quizResultRoutes.js');
const flashcardRoutes = require('./routes/flashcardRoutes.js');
const savedQuizRoutes = require('./routes/savedQuizRoutes.js');
const adminRoutes = require('./routes/adminRoutes');

app.use('/auth', authRoutes);
app.use('/api/user', userRoutes);
app.use('/api/content', contentRoutes);
app.use('/api/ai', aiRoutes);
app.use('/api/translate', translateRoutes);
app.use('/api/summaries', summaryRoutes);
app.use('/api/gemini', geminiRoutes);
app.use('/api/results', quizResultRoutes);
app.use('/api/flashcards', flashcardRoutes);
app.use('/api/saved-quizzes', savedQuizRoutes);
app.use('/api/admin', adminRoutes);

// 8. ุชุดุบูู ุงูุณูุฑูุฑ
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
  console.log(`โ Server started on port ${PORT}`);
});

module.exports = app;